//1. bubble sort
/*
#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;

void bubbleSort(vector<int>& arr, int n){
    for(int i = 1; i<n; i++){
        bool swapped=false;
        for(int j=0; j<n-i; j++){
            if(arr[j]>arr[j+1]){
                swap(arr[j], arr[j+1]);
                swapped=true;
            }
        }
        if(swapped==false){
            false;
        }
    }
}

int main()
{
    vector<int> a = {6, 2, 8, 4, 10};  // Use vector instead of raw array
    bubbleSort(a, a.size());  // Pass vector and its size
    cout << "sorted array is: ";
    for (int i = 0; i < a.size(); i++) {
        cout << a[i] << " ";
    }
    return 0;
}     */



//2. insertion sort
/*
#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;

void insertionSort(int n, vector<int> &arr){
    for(int i = 1; i<n; i++) {
        int temp = arr[i];
        int j = i-1;
        for(; j>=0; j--) {
            
            if(arr[j] > temp) {
                //shift
                arr[j+1] = arr[j];
            }
            else { // ruk jao
                break;
            }
            
        }
        //copy temp value
        arr[j+1] = temp;  
    }
}

int main()
{
    vector<int> a = {6, 2, 8, 4, 10};   // Use vector instead of raw array
    insertionSort(a.size(), a);  // Pass vector and its size
    cout << "sorted array is: ";
    for (int i = 0; i < a.size(); i++) {
        cout << a[i] << " ";
    }
    return 0;
}     */




//3.reversed array
/*
#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;

vector<int> reverse(vector<int> v){
    int s=0, e=v.size()-1;
    while(s<=e){
        swap(v[s], v[e]);
        s++;
        e--;
    }
    return v;
}

void print(vector<int> v){
    for(int i=0; i<=v.size()-1; i++){
        cout<<v[i]<<" ";
    }cout<<endl;
}

int main()
{
    vector<int> v;
    v.push_back(11);
    v.push_back(7);
    v.push_back(3);
    v.push_back(12);
    v.push_back(4);
    cout<<"Printing original array: ";
    for(int i=0; i<=v.size()-1; i++){
        cout<<v[i]<<" ";
    }cout<<endl;
    
    vector<int> ans= reverse(v);
    
    cout<<"Printing reverse array: ";
    print(ans);
    
    return 0;
}    */



//5. move zeroes
/*
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

void moveZeroes(vector<int>& a) {
    int i = 0;
    for (int j = 0; j < a.size(); j++) {
        if (a[j] != 0) {
            swap(a[j], a[i]);
            i++;
        }
    }
}

void print(const vector<int>& a) {
    for (int i = 0; i < a.size(); i++) {
        cout << a[i] << " ";
    }
    cout << endl;
}

int main() {
    vector<int> a = {1, 0, 0, 2, 3, 0, 4};
    
    cout << "Printing original array: ";
    print(a);

    moveZeroes(a);
    
    cout << "Printing after move zeroes: ";
    print(a);

    return 0;
}
*/