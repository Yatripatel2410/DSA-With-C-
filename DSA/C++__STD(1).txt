//5. queue STD
/*
#include <iostream>
#include<queue> 
using namespace std;

int main()
{
 
    //max heap
    priority_queue<int> maxi;
    
    //min heap
    priority_queue<int, vector<int>, greater<int> > mini;
    
    maxi.push(1);
    maxi.push(2);
    maxi.push(3);
    maxi.push(4);
    maxi.push(5);
    
    cout<<"size: "<<maxi.size()<<endl;
    
    int n=maxi.size();
    for(int i=0; i<n; i++){
        cout<<maxi.top()<<" ";
        maxi.pop();
    }cout<<endl;
    
    cout<<"for next queue"<<endl;
    mini.push(5);
    mini.push(1);
    mini.push(0);
    mini.push(4);
    mini.push(3);
    
    int m=mini.size();
    for(int i=0; i<m; i++){
        cout<<mini.top()<<" ";
        mini.pop();
    }cout<<endl;
    
    cout<<"khali hai kya bhai ?? "<<mini.empty()<<endl;
}      */



//2. set STD
/*
#include <iostream>
#include<set> 
using namespace std;

int main()
{
 
    set<int> s;
    
    s.insert(1);
    s.insert(1);
    s.insert(1);
    s.insert(6);
    s.insert(0);
    s.insert(5);
    s.insert(5);
    
    for(auto i: s){
        cout<<i<<" ";
    }cout<<endl;
 
    set<int>::iterator it=s.begin();
    it++;
    s.erase(it);
    for(auto i: s){
        cout<<i<<" ";
    }cout<<endl;
    
    cout<<"5 is present or not: "<<s.count(5)<<endl;
    cout<<"7 is present or not: "<<s.count(7)<<endl;
    
    set<int> :: iterator itr=s.find(5);
    for(auto it= itr;it!=s.end();it++){
        cout<<"value present at: "<<*it<<" ";
    }
    cout<<endl;
    
}      */




//3. map STD
/*
#include <iostream>
#include<map> 
using namespace std;

int main()
{
 
    map<int, string> m;
    
    m[1]="yanna";
    m[12]="asha";
    m[3]="v";
    m.insert({5,"hj"});
    
    cout<<"before erase: "<<endl;
    for(auto i:m){
        cout<<i.first<<" "<<i.second<<endl;
    }cout<<endl;
    
    cout<<"finding 12:  "<<m.count(12)<<endl;
    
    m.erase(12);
    cout<<"after erase: "<<endl;
    for(auto i:m){
        cout<<i.first<<" "<<i.second<<endl;
    }cout<<endl;
    
    auto it=m.find(5);
    for(auto i=it;i!=m.end(); i++){
        cout<<(*i).first<<endl;
    }
}      */




//4. algorithm STD
/*
#include <iostream>
#include<algorithm>
#include<vector>
using namespace std;

int
main ()
{

    vector < int >v;
    v.push_back (1);
    v.push_back (3);
    v.push_back(6);
    v.push_back (7);
    
    cout<<"finding 5 :"<<binary_search(v.begin(), v.end(), 5)<<endl;
    cout<<"finding 6:"<<binary_search(v.begin(), v.end(), 6)<<endl;
    
    cout<<"lower bound :"<<lower_bound(v.begin(),v.end(),6)-v.begin()<<endl;
    cout<<"upper bound :"<<upper_bound(v.begin(),v.end(),4)-v.begin()<<endl;
    
    int a=3;
    int b=5;
    cout<<"max: "<<max(a,b)<<endl;
    cout<<"min: "<<min(a,b)<<endl;
    swap(a, b);
    cout<<"after swap: "<<endl;
    cout<<a<<endl;
    cout<<b<<endl;
    
    string abcd="abcd";
    reverse(abcd.begin(),abcd.end());
    cout<<"print string: "<<abcd<<endl;
    
    rotate(v.begin(), v.begin()+1, v.end());
    cout<<"after rotate:"<<endl;
    for(int i:v){
        cout<<i<<" ";
    }cout<<endl;
    
    cout<<"sort the array:"<<endl;
    sort(v.begin(), v.end());
    for(int i:v){
        cout<<i<<" ";
    }
}
*/