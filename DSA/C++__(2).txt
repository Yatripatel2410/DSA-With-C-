// 1. find max or min element in the array
/*
#include <iostream>
#include <climits>
using namespace std;

int getMax(int a[], int n){
        int max = INT_MIN;
        for(int i=0; i<n;i++){
            if(a[i]>max){
                max=a[i];
            }
        }
        return max;
    }
    
 int getMin(int a[], int n){
        int min = INT_MAX;
        for(int i=0; i<n;i++){
            if(a[i]<min){
                min=a[i];
            }
        }
        return min;
    }
    
int main()
{
    int size;
    cin>>size;
    //int a[10]={10,23,56,93,6,4,0,34,30}
    int a[100];
    for(int i=0; i<5;i++){
        cin>>a[i];
    }
    cout<<"Maximum value is:"<<getMax(a,size)<<endl;
    cout<<"Minimum value is:"<<getMin(a,size)<<endl;
}
*/






//2. above code with direct function
/*
#include <iostream>
#include <climits>
using namespace std;

int getMax(int a[], int n){
        int maxi = INT_MIN;
        for(int i=0; i<n;i++){
            maxi = max(maxi, a[i]);
        }
        return maxi;
    }
    
 int getMin(int a[], int n){
        int mini = INT_MAX;
        for(int i=0; i<n;i++){
            mini = min(mini, a[i]);
        }
        return mini;
    }
    
int main()
{
    int size;
    cin>>size;
    //int a[10]={10,23,56,93,6,4,0,34,30}
    int a[100];
    for(int i=0; i<5;i++){
        cin>>a[i];
    }
    cout<<"Maximum value is:"<<getMax(a,size)<<endl;
    cout<<"Minimum value is:"<<getMin(a,size)<<endl;
}
*/




//3. linear search
/*
#include <iostream>
#include <climits>
using namespace std;

int search(int a[], int size, int key){
    
    for(int i=0; i<size ;i++){
        if(a[i] == key){
            return 1;
        }
    }
    return 0;
}

int main(){
    
    int a[10]={5,7,-2,10,22,-2,0,5,22,1};
    cout<<"Enter the element to search for "<<endl;
    int key;
    cin>>key;
    
    bool found = search(a, 10, key);
    
    if(found){
        cout<<"given element is present in our array..."<<endl;
    }
    
    else{
        cout<<"given element is not present in our array at :"<<endl;
    }
    
    return 0;
}
*/






/3. reversed array
/*
#include <iostream>
#include <climits>
using namespace std;

int reverse(int a[], int size){
    
    cout<<"Reversed array.........."<<endl;
    for(int i=(size-1); i>=0 ;i--){
        cout<<a[i]<<" ";
    }
    return 0;
}

int main(){
    
    int size;
    cin>>size;
    
    cout<<"Enter the elements: "<<endl;
    
    int a[100];
    
    for(int i=0; i<size; i++){
        cin>>a[i];
    }
 
 
    
    reverse(a, size);
    
    return 0;
}
*/






//4. reversed array with swap 
/*
#include <iostream>
#include <climits>
using namespace std;

void print(int a[], int n){
    
    for(int i=0; i<n ; i++){
        cout<<a[i]<<" ";
    }
    cout<<endl;
}

int reverse(int a[], int n){
    
    cout<<"Reversed array.........."<<endl;
    int start =0;
    int end=(n-1);
   
    while(start<=end){
        swap(a[start], a[end]);
        start++;
        end--;
    }
    return 0;
}

int main(){
    
    int a[6] = {1,2,3,4,5,6};
    
    reverse(a, 6);
    
    print(a, 6);
    
    return 0;
}
*/






//5. Swap alternative  in array
/*
#include <iostream>
#include <climits>
using namespace std;

void print(int a[], int n){
    for(int i=0; i<n; i++){
        cout<<a[i]<<" ";
    }cout<<endl;
}

void swapAlternate(int a[], int size){
    for(int i=0; i<size; i=i+2){
        if(i+1<size){
            swap(a[i],a[i+1]);
        }
    }
}

int main(){
    
    int even[8] = {5,2,3,4,7,6,1,0};
    int odd[5] = {1,2,3,4,5};
    
    swapAlternate(even, 8);
    print(even,8);
    swapAlternate(odd, 5);
    print(odd, 5);
    
    return 0;
}
*/





